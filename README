#!/bin/bash

## Notes ##

# Source this file in your ~/.bash_profile to add these operations as bash shell functions
# Be sure to run the vim-bundle-update function below after cloning

# Adds a bundle as a git submodule. Arg is the git clone url.
function vim-bundle-add() {
  local url=$1
  local repo=${1##*/}
  local name=${repo%.git}

  pushd ~/.vim > /dev/null
  git submodule add -b master $url bundle/$name
  git submodule init
  git commit -m "Added bundle $name"
  popd > /dev/null
}

# Updates one (or all) of the bundles
function vim-bundle-update() {
  pushd ~/.vim > /dev/null
  git submodule init
  git submodule update
  if [[ $# -eq 0 ]]; then
    git submodule foreach 'git checkout master; git pull;'
    git add bundle
    git commit -m "Updated all bundles"
  else
    local bundle=bundle/${1%/}
    pushd $bundle > /dev/null
    git checkout master
    git pull
    popd > /dev/null
    git add $bundle
    git commit -m "Updated bundle $1"
  fi
  popd > /dev/null
}

# Removes a bundle. Arg is the bundle directory name.
function vim-bundle-remove() {
  local bundle=bundle/${1%/}
  if [[ $bundle == "bundle/" ]]; then
    echo "Could not find bundle named '$1'. Installed bundles are:"
    ls bundle/
    return 1
  fi
  pushd ~/.vim > /dev/null
  git config -f .gitmodules --remove-section submodule.$bundle

  # Not sure this is necessary
  #git config -f .git/config --remove-section submodule.$bundle

  git rm --cached $bundle
  rm -rf $bundle
  git add .gitmodules
  git commit -m "Removed $1 bundle"
  popd > /dev/null
}

